name: Run Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/moreshields/gamba-base:latest
    strategy:
      fail-fast: false
      matrix:
        test-suite:
          - name: discord-unit
            working-dir: discord-client
            command: go test -v -short -p 4 ./...
            needs-protobuf: true
          - name: discord-integration
            working-dir: discord-client
            command: go test -v -p 2 ./repository/...
            needs-protobuf: true
          - name: lol-tracker
            working-dir: lol-tracker
            command: make test
            needs-protobuf: true
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Go, Python, and protobuf are pre-installed in the base image
    
    - name: Cache generated protobuf files
      if: matrix.test-suite.needs-protobuf
      uses: actions/cache@v4
      with:
        path: |
          api/gen/
          discord-client/proto/
          lol-tracker/api/gen/
        key: ${{ runner.os }}-protobuf-gen-${{ hashFiles('api/proto/**/*.proto', 'api/Makefile') }}
        restore-keys: |
          ${{ runner.os }}-protobuf-gen-

    - name: Cache Go modules
      if: matrix.test-suite.working-dir == 'discord-client'
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Cache Python dependencies
      if: matrix.test-suite.working-dir == 'lol-tracker'
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/pip
          venv
        key: ${{ runner.os }}-pip-${{ hashFiles('lol-tracker/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Setup Python virtual environment
      if: matrix.test-suite.working-dir == 'lol-tracker'
      run: |
        if [ ! -d "venv" ]; then
          python3.11 -m venv venv
        fi
        ./venv/bin/pip install --upgrade pip

    - name: Install lol-tracker dependencies
      if: matrix.test-suite.working-dir == 'lol-tracker'
      working-directory: lol-tracker
      run: ../venv/bin/pip install -r requirements-dev.txt

    - name: Generate protobuf code
      if: matrix.test-suite.needs-protobuf
      run: |
        if [[ "${{ matrix.test-suite.working-dir }}" == "discord-client" ]]; then
          make -C discord-client proto
        else
          make -C lol-tracker proto
        fi

    - name: Download Go dependencies
      if: matrix.test-suite.working-dir == 'discord-client'
      working-directory: discord-client
      run: go mod download

    - name: Run ${{ matrix.test-suite.name }} tests
      working-directory: ${{ matrix.test-suite.working-dir }}
      env:
        ENVIRONMENT: test
        TESTCONTAINERS_RYUK_DISABLED: true
        DATABASE_URL: postgresql://test:test@localhost:5432/test
      run: ${{ matrix.test-suite.command }}

    - name: Upload test coverage
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.test-suite.name }}
        path: test-results/
        retention-days: 7